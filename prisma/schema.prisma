generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String    @id @default(uuid())
  name            String?
  email           String    @unique
  password        String?
  image           String?
  role            Role      @default(member)
  location        String?
  emailVerified   DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  accounts        Account[]
  eventsCreated   Event[]   @relation("PartnerEvents")
  reviewsAuthored Review[]  @relation("AuthorReviews")
  sessions        Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String?
  date        DateTime
  image       String?
  location    String
  city        String
  partnerId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  partner     User     @relation("PartnerEvents", fields: [partnerId], references: [id])
  reviews     Review[]
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String?
  authorId  String
  eventId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation("AuthorReviews", fields: [authorId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id])
}

enum Role {
  member
  partner
  admin
}
